<!-- views/partials/header.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <style>
    :root{
      --bg:#0f0f11;
      --surface:rgba(255,255,255,.06);
      --up:rgba(255,255,255,.09);
      --border:rgba(255,255,255,.12);
      --accent:#00d2ff;
      --text:#fff;
      --soft:#b3b3b3;
      --radius:12px;
      --ease:cubic-bezier(.4,0,.2,1);
    }
    *{margin:0;padding:0;box-sizing:border-box;font-family:"Segoe UI",system-ui,sans-serif}
    header{position:sticky;top:0;backdrop-filter:blur(20px);background:var(--surface);border-bottom:1px solid var(--border);z-index:999}
    .nav{max-width:1200px;margin:0 auto;display:flex;align-items:center;justify-content:space-between;padding:.75rem 1rem}
    .logo{font-size:1.6rem;font-weight:700;color:var(--accent);text-decoration:none;display:flex;align-items:center;gap:.5rem}
    .nav-links{display:flex;align-items:center;gap:2rem;list-style:none}
    .nav-links a{color:var(--soft);text-decoration:none;font-size:.95rem;transition:color .2s var(--ease);position:relative}
    .nav-links a:hover{color:var(--accent)}
    .nav-links a.notification-badge::after{
      content: '';
      position: absolute;
      top: -4px;
      right: -4px;
      width: 8px;
      height: 8px;
      background: #e74c3c;
      border-radius: 50%;
      display: none;
    }
    .nav-links a.notification-badge[data-count="0"]::after{display: none}
    .nav-links a.notification-badge[data-count]:not([data-count="0"])::after{display: block}
    .search-form{display:flex;align-items:center;gap:.5rem}
    .search-form input{padding:.5rem .75rem;border:1px solid var(--border);border-radius:var(--radius);background:var(--up);color:var(--text);font-size:.9rem}
    .search-form button{padding:.55rem;border:none;background:var(--accent);color:#fff;border-radius:var(--radius);cursor:pointer}
    .dropdown{position:relative}
    .dropdown-toggle{background:transparent;border:none;color:var(--soft);display:flex;align-items:center;gap:.5rem;font-size:.9rem;cursor:pointer}
    .dropdown-toggle img{width:28px;height:28px;border-radius:50%;object-fit:cover}
    .dropdown-menu{position:absolute;right:0;top:50px;background:var(--surface);border:1px solid var(--border);border-radius:var(--radius);padding:.5rem 0;min-width:170px;display:none;flex-direction:column}
    .dropdown-menu a{padding:.6rem 1rem;color:var(--soft);text-decoration:none;display:flex;align-items:center;gap:.5rem}
    .dropdown-menu a:hover{background:var(--up)}
    .dropdown:hover .dropdown-menu{display:flex}
    .hamburger{display:none;font-size:1.4rem;color:var(--soft);background:none;border:none;cursor:pointer}
    @media(max-width:768px){
      .nav-links{position:fixed;top:60px;left:0;width:100%;background:var(--surface);flex-direction:column;padding:1rem 0;gap:1rem;transform:translateY(-100%);transition:transform .3s var(--ease);border-bottom:1px solid var(--border)}
      .nav-links.open{transform:translateY(0)}
      .hamburger{display:block}
    }
  </style>
</head>
<body>
<header>
  <nav class="nav">
    <a href="/" class="logo"><i class="fas fa-blog"></i> Blogify</a>

    <ul class="nav-links" id="navLinks">
      <li><a href="/"><i class="fas fa-home"></i> Home</a></li>
      <% if (user) { %>
        <li><a href="/blog/addBlog"><i class="fas fa-plus"></i> Add Blog</a></li>
        <li><a href="/dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
        <li><a href="/notification" class="notification-badge" id="notificationBadge" data-count="0"><i class="fas fa-bell"></i> Notifications</a></li>
      <% } else { %>
        <li><a href="/user/signin"><i class="fas fa-sign-in-alt"></i> Sign In</a></li>
        <li><a href="/user/signup"><i class="fas fa-user-plus"></i> Sign Up</a></li>
      <% } %>
    </ul>

    <div style="display:flex;align-items:center;gap:1rem">
      <form class="search-form" action="/search" method="GET">
        <input type="text" name="q" placeholder="Searchâ€¦" aria-label="Search">
        <button type="submit"><i class="fas fa-search"></i></button>
      </form>

      <% if (user) { %>
        <div class="dropdown">
          <button class="dropdown-toggle">
            <img src="<%= user.profileImageURL || '/images/default.png' %>" alt="avatar">
            <%= user.fullname %>
            <i class="fas fa-chevron-down"></i>
          </button>
          <div class="dropdown-menu">
            <a href="/profile"><i class="fas fa-user"></i> Profile</a>
            <a href="/settings"><i class="fas fa-cog"></i> Settings</a>
            <a href="/user/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
          </div>
        </div>
      <% } %>

      <button class="hamburger" id="hamburger"><i class="fas fa-bars"></i></button>
    </div>
  </nav>
</header>

<script>
  const hamburger = document.getElementById('hamburger');
  const navLinks = document.getElementById('navLinks');
  hamburger.addEventListener('click', () => {
    navLinks.classList.toggle('open');
  });

  // Function to fetch unread notification count and update badge
  async function updateNotificationBadge() {
    try {
      const response = await fetch('/notification/unread-count');
      const data = await response.json();
      if (data.success) {
        const badge = document.getElementById('notificationBadge');
        if (badge) {
          badge.setAttribute('data-count', data.count);
        }
      }
    } catch (err) {
      console.error('Error fetching notification count:', err);
    }
  }

  // Run immediately and every 30 seconds
  updateNotificationBadge();
  setInterval(updateNotificationBadge, 30000);

  // Refresh page on new notifications (only on notifications page)
  if (window.location.pathname === '/notification') {
    let lastCount = 0;
    async function checkForNewNotifications() {
      try {
        const response = await fetch('/notification/unread-count');
        const data = await response.json();
        if (data.success && data.count > lastCount) {
          window.location.reload();
        }
        lastCount = data.count;
      } catch (err) {
        console.error('Error checking notifications:', err);
      }
    }
    checkForNewNotifications();
    setInterval(checkForNewNotifications, 30000);
  }
</script>
</body>
</html>
